Implementing Object and pointer using array
We can implement the element object required for a linked list by using 3 arrays keys[], next[], prev[] where the index to these array represents the pointer to the object. We have a global free-head pointer that points to the head of linked list of free objects. The linked list of free objects acts as a singly linked list stack that allocates the most recently freed object. Any object can act as a free object if we use one of its attributes as next pointer. We have the function Allocate() which returns pointer to an object that has been removed from the free linked list and function Free(x) that adds the object pointed by x to the free linked list.

